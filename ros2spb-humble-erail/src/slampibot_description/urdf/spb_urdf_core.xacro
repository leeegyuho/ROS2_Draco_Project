<?xml version="1.0"?>
<robot name="spb_urdf" xmlns:xacro="http://ros.org/wiki/xacro">

    <xacro:include filename="spb_urdf_inertial.xacro"/>
    <xacro:include filename="spb_urdf_materials.xacro"/>    
       
    <!-- Define robot parameters -->
    <xacro:property name="base_length" value="0.42"/>
    <xacro:property name="base_width" value="0.31"/>    
    <xacro:property name="base_height" value="0.18"/>
    <xacro:property name="base_mass" value="1.0"/>

    <xacro:property name="wheel_radius" value="0.10"/>
    <xacro:property name="wheel_width" value="0.04"/>
    <xacro:property name="wheel_ygap" value="0.025"/>
    <xacro:property name="wheel_zoff" value="0.05"/>
    <xacro:property name="wheel_xoff" value="0.12"/>
    <xacro:property name="wheel_mass" value="0.05"/>

    <xacro:property name="caster_xoff" value="0.14"/>
    <xacro:property name="caster_mass" value="0.01"/>

    <!-- Robot Base -->
    <link name="base_link">
        <visual>
            <geometry>
                <box size="${base_length} ${base_width} ${base_height}"/>
            </geometry>
            <material name="Orange"/>        
        </visual>

        <collision>
            <geometry>
                <box size="${base_length} ${base_width} ${base_height}"/>
            </geometry>
        </collision>
           
        <xacro:inertial_box mass="${base_mass}" length="${base_length}" width="${base_width}" height="${base_height}">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_box>    
    </link>

    <!-- Robot Footprint -->
    <link name="base_footprint">
        <xacro:inertial_box mass="0" length="0" width="0" height="0">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_box>
    </link>      

    <joint name="base_joint" type="fixed">
        <parent link="base_footprint"/>
        <child link="base_link"/>
        <origin xyz="0.0 0.0 ${(wheel_radius+wheel_zoff)}" rpy="0 0 0"/>
    </joint>

    <!-- Wheels -->
    <xacro:macro name="wheel" params="prefix x_reflect y_reflect">
        <link name="${prefix}_link">
            <visual>
                <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
                </geometry>
                <material name="Cyan"/>            
            </visual>

            <collision>
                <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
                </geometry>
            </collision>

            <xacro:inertial_cylinder mass="${wheel_mass}" length="${wheel_width}" radius="${wheel_radius}">
                <origin xyz="0 0 0" rpy="0 0 0"/>
            </xacro:inertial_cylinder>
        </link>

        <joint name="${prefix}_joint" type="continuous">
            <parent link="base_link"/>
            <child link="${prefix}_link"/>
            <origin xyz="${x_reflect*wheel_xoff} ${y_reflect*(base_width/2+wheel_ygap)} ${-wheel_zoff}" rpy="0 0 0"/>
            <axis xyz="0 1 0"/>
        </joint>
    </xacro:macro>

    <xacro:wheel prefix="wheel_left" x_reflect="1" y_reflect="1" />
    <xacro:wheel prefix="wheel_right" x_reflect="1" y_reflect="-1" />

    <!-- Caster Wheel -->
    <link name="front_caster">
        <visual>
            <geometry>
                <sphere radius="${(wheel_radius+wheel_zoff-(base_height/2))}"/>
            </geometry>
            <material name="Green"/>    
        </visual>

        <collision>            
            <geometry>
                <sphere radius="${(wheel_radius+wheel_zoff-(base_height/2))}"/>
            </geometry>
        </collision>
        
        <xacro:inertial_sphere mass="${caster_mass}" radius="${(wheel_radius+wheel_zoff-(base_height/2))}">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_sphere>        
    </link>

    <joint name="caster_joint" type="fixed">
        <parent link="base_link"/>
        <child link="front_caster"/>
        <origin xyz="${-caster_xoff} 0.0 ${-(base_height/2)}" rpy="0 0 0"/>
    </joint>

</robot>